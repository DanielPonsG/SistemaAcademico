# Generated by Django 4.2.7 on 2025-07-05 17:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('smapp', '0033_add_missing_apoderado_fields'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='apoderado',
            options={'ordering': ['primer_nombre', 'apellido_paterno'], 'verbose_name': 'Apoderado', 'verbose_name_plural': 'Apoderados'},
        ),
        migrations.RenameField(
            model_name='apoderado',
            old_name='profesion',
            new_name='ocupacion',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='activo',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='estado_civil',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='notas_adicionales',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='profesor',
        ),
        migrations.AddField(
            model_name='apoderado',
            name='codigo_apoderado',
            field=models.CharField(default='APO001', max_length=20, unique=True),
        ),
        migrations.AddField(
            model_name='apoderado',
            name='puede_retirar',
            field=models.BooleanField(default=True, verbose_name='Autorizado para retirar al estudiante'),
        ),
        migrations.AlterField(
            model_name='apoderado',
            name='contacto_emergencia',
            field=models.BooleanField(default=False, verbose_name='Es contacto de emergencia'),
        ),
        migrations.AlterField(
            model_name='apoderado',
            name='fecha_registro',
            field=models.DateField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='apoderado',
            name='tipo_apoderado',
            field=models.CharField(choices=[('titular', 'Apoderado Titular'), ('suplente', 'Apoderado Suplente'), ('emergencia', 'Contacto de Emergencia')], default='titular', max_length=10),
        ),
        migrations.AlterField(
            model_name='perfil',
            name='tipo_usuario',
            field=models.CharField(choices=[('director', 'Director'), ('profesor', 'Profesor'), ('alumno', 'Alumno'), ('apoderado', 'Apoderado')], max_length=10),
        ),
        migrations.CreateModel(
            name='RelacionApoderadoEstudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentesco', models.CharField(choices=[('padre', 'Padre'), ('madre', 'Madre'), ('tutor', 'Tutor Legal'), ('abuelo', 'Abuelo/a'), ('tio', 'Tío/a'), ('hermano', 'Hermano/a Mayor'), ('otro', 'Otro Familiar'), ('no_familiar', 'No Familiar')], default='padre', max_length=15)),
                ('es_titular', models.BooleanField(default=True, verbose_name='Es apoderado titular')),
                ('autorizado_retiro', models.BooleanField(default=True, verbose_name='Autorizado para retiro')),
                ('fecha_asignacion', models.DateField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('apoderado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smapp.apoderado')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smapp.estudiante')),
            ],
            options={
                'verbose_name': 'Relación Apoderado-Estudiante',
                'verbose_name_plural': 'Relaciones Apoderado-Estudiante',
                'ordering': ['estudiante__primer_nombre', 'apoderado__primer_nombre'],
                'unique_together': {('apoderado', 'estudiante')},
            },
        ),
        migrations.AddField(
            model_name='apoderado',
            name='estudiantes',
            field=models.ManyToManyField(related_name='apoderados', through='smapp.RelacionApoderadoEstudiante', to='smapp.estudiante'),
        ),
    ]
